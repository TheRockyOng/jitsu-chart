nameOverride: ""

fullnameOverride: ""

# Kept for compatibility while refactoring
jitsu:
  environment: {}

# Common configuration values shared across multiple components.
config:
  # Postgres database URL in the format of: postgres://username:password@host:port/database?options
  # Will be configured automatically if left empty and using the PostgreSQL subchart.
  databaseURL: ""

  # Redis URL in the format of: redis://username:password@host:port
  # Will be configured automatically if left empty and using the Redis subchart.
  redisURL: ""

  # Global Kafka configuration
  kafkaBootstrapServers: ""
  kafkaSSL: ""
  kafkaSASL: "" # dict or string

  # Generate inter-service auth tokens automatically
  autoGenerateTokens: true

  # Use these values to override service URLs if deployed externally.
  bulkerURL: ""
  rotorURL: ""

global:
  postgresql:
    auth:
      username: "jitsu"
      password: ""
      database: "jitsu"
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

console:
  enabled: true
  config:
    # The URL where the Jitsu Console will be available
    # https://docs.jitsu.com/self-hosting/configuration#jitsu_public_url
    jitsuPublicURL: ""

    # Comma-separated list of email:password, required when not using GitHub OAuth
    # https://docs.jitsu.com/self-hosting/configuration#admin_credentials
    adminCredentials: ""

    # Enable GitHub OAuth
    # https://docs.jitsu.com/self-hosting/configuration#github_client_id
    githubClientID: ""
    githubClientSecret: ""

    # Disable sign-up
    # https://github.com/jitsucom/jitsu/blob/newjitsu/docker/README.md#further-steps
    disableSignup: "false"

    # Leave empty to configure automatically
    # https://docs.jitsu.com/self-hosting/configuration#console_auth_tokens
    consoleAuthTokens: ""

    # Leave empty to configure automatically
    # https://docs.jitsu.com/self-hosting/configuration#global_hash_secret
    globalHashSecret: ""

    # Plain, non-hashed tokens. Not recommended for production.
    # https://docs.jitsu.com/self-hosting/configuration#console_raw_auth_tokens
    consoleRawAuthTokens: ""

    # Leave empty to use global jitsu.databaseURL
    # https://docs.jitsu.com/self-hosting/configuration#database_url
    databaseURL: ""

    # Only needed if the bulker is deployed outside of this chart. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_url-1
    bulkerURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_auth_key-1
    bulkerAuthKey: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#rotor_url
    rotorURL: ""

    # Public domain where ingest service is available. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_host
    ingestHost: ""

    # HTTP port of the ingest service. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_port
    ingestPort: ""

    # Whether to enable the Connectors Syncs feature in the Jitsu Console UI. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncs_enabled
    syncsEnabled: ""

    # The URL of the Syncctl service. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_url
    syncctlUrl: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_auth_key
    syncctlAuthKey: ""

    # Enables Connectors Sync Scheduler feature. Google Service Account Key in JSON format.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_auth_key
    googleSchedulerKey: ""

    # ClickHouse configuration
    # https://docs.jitsu.com/self-hosting/configuration#clickhouse_metrics_schema
    clickhouseMetricsSchema: ""
    clickhouseURL: ""
    clickhouseUsername: ""
    clickhousePassword: ""

    # Log format. One of "text", "json".
    # https://docs.jitsu.com/self-hosting/configuration#log_format-1
    logFormat: "text"
  replicaCount: 1
  image:
    repository: jitsucom/console
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    className: ''
    annotations: {}
    hosts:
      - host: jitsu.example.org
        paths:
          - path: /
            pathType: Prefix
    tls: []
    # - secretName: jitsu-example-org-tls
    #   hosts:
    #     - jitsu.example.org
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

bulker:
  enabled: true
  config:
    # UUID of bulker instance
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_instance_id
    instanceID: ""

    # Leave empty to configure automatically.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_config_source
    configSource: ""

    # Leave empty to configure automatically.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_config_source_http_auth_token
    configSourceHTTPAuthToken: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_config_refresh_period_sec
    configRefreshPeriodSec: ""

    # Dict of dicts converted to JSON environment variables, e.g.:
    # bulkerDestination:
    #   postgres:
    #     id: postgres
    # results in: BULKER_DESTINATION_POSTGRES='{"id": "postgres"}'
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#with-bulker_destination_-environment-variables
    destination: {}

    # Leave empty to automatically configure.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_auth_tokens
    authTokens: ""

    # Leave empty to automatically configure.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_token_secret
    tokenSecret: ""

    # Leave empty to automatically configure.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_raw_auth_tokens
    rawAuthTokens: ""

    # Leave empty to automatically configure.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_bootstrap_servers
    kafkaBootstrapServers: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_ssl
    kafkaSSL: "false"

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_ssl_skip_verify
    kafkaSSLSkipVerify: ""

    # Can be either a string or a dict.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_sasl-aka-kafka-auth
    kafkaSASL: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_batch_runner_default_period_sec
    batchRunnerDefaultPeriodSec: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_batch_runner_default_batch_size
    batchRunnerDefaultBatchSize: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_messages_retry_count
    messagesRetryCount: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_messages_retry_backoff_base
    messagesRetryBackoffBase: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_messages_retry_backoff_max_delay
    messagesRetryBackoffMaxDelay: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_batch_runner_default_retry_period_sec
    batchRunnerDefaultRetryPeriodSec: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_batch_runner_default_retry_batch_size
    batchRunnerDefaultRetryBatchSize: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_topic_retention_hours
    kafkaTopicRetentionHours: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_retry_topic_retention_hours
    kafkaRetryTopicRetentionHours: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_dead_topic_retention_hours
    kafkaDeadTopicRetentionHours: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_kafka_topic_replication_factor
    kafkaTopicReplicationFactor: ""

    # Store history of processed events in Redis. Leave empty to configure automatically if config.redisURL is set and/or Redis subchart is being used.
    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#connection-to-redis-optional
    redisURL: ""

    # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#connection-to-redis-optional
    eventsLogMaxSize: ""
  replicaCount: 1
  image:
    repository: jitsucom/bulker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: ""
  service:
    type: ClusterIP
    port: 3042
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

rotor:
  enabled: true
  config:
    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#repository_base_url
    repositoryBaseURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#repository_auth_token
    repositoryAuthToken: ""

    # https://docs.jitsu.com/self-hosting/configuration#repository_refresh_period_sec
    repositoryRefreshPeriodSec: ""

    # Leave empty to configure automatically if config.redisURL is set or Redis subchart is being used.
    # https://docs.jitsu.com/self-hosting/configuration#redis_url
    redisURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_url
    bulkerURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_auth_key
    bulkerAuthKey: ""

    # Leave empty to configure automatically if config.kafkaBootstrapServers is set or Kafka subchart is being used.
    # https://docs.jitsu.com/self-hosting/configuration#kafka_bootstrap_servers
    kafkaBootstrapServers: ""

    # https://docs.jitsu.com/self-hosting/configuration#kafka_ssl
    kafkaSSL: "false"

    # Can be either a string or a dict.
    # https://docs.jitsu.com/self-hosting/configuration#kafka_sasl-aka-kafka-auth
    kafkaSASL: ""

    # Leave empty to configure automatically if MongoDB subchart is being used.
    # https://docs.jitsu.com/self-hosting/configuration#mongodb_url
    mongodbURL: ""

    # https://docs.jitsu.com/self-hosting/configuration#metrics_destination_id
    metricsDestinationID: ""

    # https://docs.jitsu.com/self-hosting/configuration#events_log_max_size
    eventsLogMaxSize: ""

    # https://docs.jitsu.com/self-hosting/configuration#concurrency
    concurrency: ""

    # https://docs.jitsu.com/self-hosting/configuration#messages_retry_count
    messagesRetryCount: ""

    # https://docs.jitsu.com/self-hosting/configuration#messages_retry_backoff_base
    messagesRetryBackoffBase: ""

    # https://docs.jitsu.com/self-hosting/configuration#messages_retry_backoff_max_delay
    messagesRetryBackoffMaxDelay: ""

    # https://docs.jitsu.com/self-hosting/configuration#log_format
    logFormat: "text"
  replicaCount: 1
  image:
    repository: jitsucom/rotor
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 3401
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  environment: {}
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

ingest:
  enabled: true
  config:
    # Public domain where ingest service is deployed.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_data_domain
    dataDomain: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_auth_tokens
    authTokens: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_token_secret
    tokenSecret: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_raw_auth_tokens
    rawAuthTokens: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_repository_url
    repositoryURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_repository_auth_token
    repositoryAuthToken: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_repository_refresh_period_sec
    repositoryRefreshPeriodSec: ""

    # Leave empty to configure automatically when Kafka subchart is enabled or config.kafkaBootstrapServers is set.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_kafka_bootstrap_servers
    kafkaBootstrapServers: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_kafka_ssl
    kafkaSSL: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_kafka_ssl_skip_verify
    kafkaSSLSkipVerify: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_kafka_sasl-aka-kafka-auth
    kafkaSASL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_rotor_url
    rotorURL: ""

    # Leave empty to configure automatically when Redis subchart is enabled or config.redisURL is set.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_redis_url
    redisURL: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_events_log_max_size
    eventsLogMaxSize: ""

    # https://docs.jitsu.com/self-hosting/configuration#ingest_log_format
    logFormat: "text"
  replicaCount: 1
  image:
    repository: jitsucom/ingest
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 3049
  ingress:
    enabled: true
    className: ''
    annotations: {}
    hosts:
      - host: jitsu.example.org
        paths:
          - path: /api/s/
            pathType: Prefix
    tls: []
    # - secretName: jitsu-example-org-tls
    #   hosts:
    #     - jitsu.example.org
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

syncctl:
  enabled: true
  config:
    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_auth_tokens
    authTokens: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_token_secret
    tokenSecret: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_raw_auth_tokens
    rawAuthTokens: ""

    # Leave empty to configure automatically when Postgres subchart is used or config.databaseURL is set.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_database_url
    databaseURL: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_sidecar_database_url
    sidecarDatabaseURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_bulker_url
    bulkerURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_bulker_auth_key
    bulkerAuthKey: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_kubernetes_client_config
    kubernetesClientConfig: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_kubernetes_client_config
    kubernetesContext: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_task_timeout_hours
    kubernetesNamespace: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_task_timeout_hours
    taskTimeoutHours: ""

    # https://docs.jitsu.com/self-hosting/configuration#syncctl_log_format
    logFormat: "text"
  replicaCount: 1
  image:
    repository: jitsucom/syncctl
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    port: 3043
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

migration:
  enabled: true
  image:
    repository: jitsucom/console
    pullPolicy: IfNotPresent
    tag: ""
  restartPolicy: Never
  environment: {}
  jobAnnotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}
  name: ""

postgresql:
  enabled: true

redis:
  enabled: true

kafka:
  enabled: true
  listeners:
    interbroker:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    client:
      protocol: PLAINTEXT
      external: PLAINTEXT

mongodb:
  enabled: true
