nameOverride: ""

fullnameOverride: ""

# Common configuration values shared across multiple components.
config:
  # Postgres database URL in the format of: postgres://username:password@host:port/database?options
  databaseURL: ""
  # Redis URL in the format of: redis://username:password@host:port
  redisURL: ""

global:
  postgresql:
    auth:
      username: ""
      password: ""
      database: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

console:
  enabled: true
  config:
    # Comma-separated list of email:password, required when not using GitHub OAuth
    # https://docs.jitsu.com/self-hosting/configuration#admin_credentials
    adminCredentials: ""

    # The URL where the Jitsu Console will be available
    # https://docs.jitsu.com/self-hosting/configuration#jitsu_public_url
    publicURL: ""

    # Leave empty to configure automatically
    # https://docs.jitsu.com/self-hosting/configuration#console_auth_tokens
    consoleAuthTokens: ""

    # Leave empty to configure automatically
    # https://docs.jitsu.com/self-hosting/configuration#global_hash_secret
    globalHashSecret: ""

    # Plain, non-hashed tokens. Not recommended for production.
    # https://docs.jitsu.com/self-hosting/configuration#console_raw_auth_tokens
    consoleRawAuthTokens: ""

    # Leave empty to use global jitsu.databaseURL
    # https://docs.jitsu.com/self-hosting/configuration#database_url
    databaseURL: ""

    # Only needed if the bulker is deployed outside of this chart. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_url-1
    bulkerURL: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#bulker_auth_key-1
    bulkerAuthKey: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#rotor_url
    rotorURL: ""

    # Enable GitHub OAuth
    # https://docs.jitsu.com/self-hosting/configuration#github_client_id
    githubClientID: ""
    githubClientSecret: ""

    # Public domain where ingest service is available. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_host
    ingestHost: ""

    # HTTP port of the ingest service. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#ingest_port
    ingestPort: ""

    # Whether to enable the Connectors Syncs feature in the Jitsu Console UI. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncs_enabled
    syncsEnabled: ""

    # The URL of the Syncctl service. Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_url
    syncctlUrl: ""

    # Leave empty to configure automatically.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_auth_key
    syncctlAuthKey: ""

    # Enables Connectors Sync Scheduler feature. Google Service Account Key in JSON format.
    # https://docs.jitsu.com/self-hosting/configuration#syncctl_auth_key
    googleSchedulerKey: ""

    # ClickHouse configuration
    # https://docs.jitsu.com/self-hosting/configuration#clickhouse_metrics_schema
    clickhouseMetricsSchema: ""
    clickhouseURL: ""
    clickhouseUsername: ""
    clickhousePassword: ""

    # Log format. One of "text", "json".
    # https://docs.jitsu.com/self-hosting/configuration#log_format-1
    logFormat: "text"
  replicaCount: 1
  image:
    repository: jitsucom/console
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 3000
  ingress:
    enabled: true
    className: ''
    annotations: {}
    hosts: []
    # - host: jitsu.example.org
    #   paths:
    #     - path: /
    #       pathType: Prefix
    tls: []
    # - secretName: jitsu-example-org-tls
    #   hosts:
    #     - jitsu.example.org
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment:
    NEXTAUTH_URL:
      value: ""
    JITSU_PUBLIC_URL:
      value: ""
    JITSU_INGEST_PUBLIC_URL:
      value: ""
    CONSOLE_AUTH_TOKENS:
      # https://docs.jitsu.com/self-hosting/configuration#console_auth_tokens
      # needed by ingest
      value: ""
    ROTOR_URL:
      value: "http://jitsu-rotor:3401"
    BULKER_AUTH_KEY:
      # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_auth_tokens
      value: ""
    DISABLE_SIGNUP:
      value: "false"
    GITHUB_CLIENT_ID:
      value: ""
    GITHUB_CLIENT_SECRET:
      value: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

migration:
  enabled: true
  image:
    repository: jitsucom/console
    pullPolicy: IfNotPresent
    tag: "latest"
  restartPolicy: Never
  environment: {}
  jobAnnotations: {}
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

bulker:
  enabled: true
  replicaCount: 1
  image:
    repository: jitsucom/bulker
    pullPolicy: IfNotPresent
    # Overrides the image tag whose default is the chart appVersion.
    tag: "latest"
  service:
    type: ClusterIP
    port: 3042
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment:
    BULKER_AUTH_TOKENS:
      # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_auth_tokens
      value: ""
    BULKER_KAFKA_BOOTSTRAP_SERVERS:
      value: ""
    BULKER_CONFIG_SOURCE:
      value: "redis"
    BULKER_INTERNAL_TASK_LOG:
      value: |
        {
        "id": "task_log",
        "metricsKeyPrefix": "syncs",
        "usesBulker": true,
        "type": "postgres",
        "options":{
          "mode": "stream"
        },
        "credentials":{
          "host": "",
          "port": 5432,
          "sslMode": "disable",
          "database": "",
          "password": "",
          "username": "",
          "defaultSchema":"public"
          }
        }
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

rotor:
  enabled: true
  replicaCount: 1
  image:
    repository: jitsucom/rotor
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 3401
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  environment:
    MONGODB_URL:
      # mongodb://username:password@host:port
      value: ""
    KAFKA_BOOTSTRAP_SERVERS:
      # host:port
      value: ""
    BULKER_AUTH_KEY:
      # https://github.com/jitsucom/bulker/blob/main/.docs/server-config.md#bulker_auth_tokens
      value: ""
    CONFIG_STORE_DATABASE_URL:
      # postgres://username:password@host:port/database?options
      value: ""
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

ingest:
  enabled: true
  replicaCount: 1
  image:
    repository: jitsucom/ingest
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 3043
  ingress:
    enabled: true
    className: ''
    annotations: {}
    hosts: []
    # - host: jitsu.example.org
    #   paths:
    #     - path: /api/s/
    #       pathType: Prefix
    tls: []
    # - secretName: jitsu-example-org-tls
    #   hosts:
    #     - jitsu.example.org
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment:
    INGEST_PUBLIC_URL:
      value: ""
    INGEST_AUTH_TOKENS:
      # https://docs.jitsu.com/self-hosting/configuration#ingest_auth_tokens
      value: ""
    INGEST_KAFKA_BOOTSTRAP_SERVERS:
      # host:port
      value: ""
    INGEST_REPOSITORY_URL:
      value: "http://jitsu-console:3000/api/admin/export/streams-with-destionations"
    INGEST_REPOSITORY_AUTH_TOKEN:
      # https://docs.jitsu.com/self-hosting/configuration#console_auth_tokens
      # service-admin-account:console-token
      value: ""
    INGEST_SCRIPT_ORIGIN:
      value: "http://jitsu-console:3000/api/s/javascript-library"
    INGEST_ROTOR_URL:
      value: "http://jitsu-rotor:3401"
    INGEST_REDIS_URL:
      value: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

syncctl:
  enabled: true
  replicaCount: 1
  image:
    repository: jitsucom/syncctl
    pullPolicy: IfNotPresent
    tag: "latest"
  service:
    type: ClusterIP
    port: 3043
  probes:
    enabled: true
  autoscaling:
    enabled: false
    minReplicas: 1
    maxReplicas: 100
    targetCPUUtilizationPercentage: 80
    # targetMemoryUtilizationPercentage: 80
  podDisruptionBudget:
    enabled: false
    minAvailable: 1
  environment:
    SYNCCTL_AUTH_TOKENS:
      value: ""
    SYNCCTL_TOKEN_SECRET:
      value: ""
    SYNCCTL_DATABASE_URL:
      value: ""
    SYNCCTL_KUBERNETES_CLIENT_CONFIG:
      value: local
    SYNCCTL_KUBERNETES_CONTEXT:
      value: ""
    SYNCCTL_KUBERNETES_NAMESPACE:
      # This needs to be abstracted
      value: '{{ .Release.Namespace }}'
    SYNCCTL_BULKER_URL:
      value: "http://jitsu-bulker:3042"
    SYNCCTL_BULKER_AUTH_KEY:
      value: ""
  podAnnotations: {}
  podSecurityContext: {}
  securityContext: {}
  resources: {}
  nodeSelector: {}
  tolerations: []
  affinity: {}

imagePullSecrets: []

serviceAccount:
  create: true
  annotations: {}
  name: ""

postgresql:
  enabled: true

redis:
  enabled: true

kafka:
  enabled: true
  listeners:
    interbroker:
      protocol: PLAINTEXT
    controller:
      protocol: PLAINTEXT
    client:
      protocol: PLAINTEXT
      external: PLAINTEXT

mongodb:
  enabled: true
